public class java.util.HashMap extends java.lang.Object
{
	//[TODO] dynamically get object offset

	private int[] KVStore;

	public void <init>() {
		java.util.HashMap r0;
		int[] a0;

        r0 := @this: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

		a0 = newarray (int)[2000];

		r0.<java.util.HashMap: int[] KVStore> = a0;

        return;
	}

	public void remove(java.lang.Object) {
		java.util.HashMap r0;
		int[] a0;
		int key, keyReal;

        r0 := @this: java.util.HashMap;

		a0 = <java.util.HashMap: int[] KVStore>;

        key := @parameter0: java.lang.Object;

		keyReal = key;

		if key <= 129000 goto label1;

		keyReal = key - 129000;

	label1:
		
		a0[keyReal] = -6666666;

		return;
	}

	public java.lang.Object get(java.lang.Object) {
		java.util.HashMap r0;
		int[] a0;
		int key, keyReal;
		java.lang.Object result;

        r0 := @this: java.util.HashMap;

		a0 = <java.util.HashMap: int[] KVStore>;

        key := @parameter0: java.lang.Object;

		keyReal = key;

		if key <= 129000 goto label1;

		keyReal = key - 129000;

	label1:
		
		result = a0[keyReal];

		if result != -6666666 goto label2;

		result = null;

	label2:

		return result;
	}

	public void put(java.lang.Object, java.lang.Object) {
		java.util.HashMap r0;
		int[] a0;
		int key, value, keyReal;

        r0 := @this: java.util.HashMap;

		a0 = <java.util.HashMap: int[] KVStore>;

        key := @parameter0: java.lang.Object;
        value := @parameter1: java.lang.Object;

		keyReal = key;

		if key <= 129000 goto label1;

		keyReal = key - 129000;

	label1:
		
		a0[keyReal] = value;

		return;
	}

	public boolean containsKey(java.lang.Object) {
		java.util.HashMap r0;
		int[] a0;
		int key, keyReal;
		java.lang.Object result;

        r0 := @this: java.util.HashMap;

		a0 = <java.util.HashMap: int[] KVStore>;

        key := @parameter0: java.lang.Object;

		keyReal = key;

		if key <= 129000 goto label1;

		keyReal = key - 129000;

	label1:
		
		result = a0[keyReal];

		if result == -6666666 goto label2;

		return 1;

	label2:
		return 0;
	}

}
